// ----------------------------------------------------------------------------
//  File:        page.tsx
//  Project:     Celaya Solutions (C-Suite Dashboard)
//  Created by:  Celaya Solutions, 2025
//  Author:      Christopher Celaya <chris@celayasolutions.com>
//  Description: CID-based replay interface for agent insights and verification
//  Version:     1.0.0
//  License:     BSL (SPDX id BUSL)
//  Last Update: May 2025
// ----------------------------------------------------------------------------

'use client';

import React, { useState, useEffect } from 'react';
import { useParams } from 'next/navigation';
import { DashboardLayout } from '@/components/layout/dashboard-layout';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { useApi } from '@/lib/useApi';

interface ReplayData {
  cid: string;
  agentId: string;
  timestamp: number;
  content: string;
  metadata: Record<string, any>;
  verified: boolean;
  signatures: string[];
  blockNumber?: number;
  transactionHash?: string;
}

export default function ReplayPage() {
  const params = useParams();
  const cid = params.cid as string;
  const { api, isConnected } = useApi();
  
  const [replayData, setReplayData] = useState<ReplayData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (cid) {
      fetchReplayData();
    }
  }, [cid, api, isConnected]);

  const fetchReplayData = async () => {
    setLoading(true);
    setError(null);

    try {
      // In a real implementation, this would query the blockchain for CID data
      // For now, we'll simulate the replay data
      setTimeout(() => {
        // Mock replay data based on CID
        const mockData: ReplayData = {
          cid,
          agentId: 'agent_001',
          timestamp: 1704067200000, // Fixed timestamp for consistency
          content: `# Market Analysis Report

## Executive Summary
Based on comprehensive data analysis, the current market conditions show:

- **Trend Direction**: Bullish with moderate volatility
- **Risk Level**: Medium (3.2/5.0)
- **Confidence Score**: 87%

## Key Insights
1. **Volume Analysis**: Trading volume increased by 23% over the past 24 hours
2. **Technical Indicators**: 
   - RSI: 62.3 (Neutral to Bullish)
   - MACD: Positive crossover detected
   - Moving Averages: Price above 20-day and 50-day MA

## Recommendations
- Consider position sizing at 2-3% of portfolio
- Set stop-loss at 5% below entry
- Monitor for reversal signals at resistance levels

*Generated by Agent ${cid.slice(-8)} at 2024-01-01T00:00:00.000Z*`,
          metadata: {
            model: 'GPT-4-Turbo',
            version: '1.2.3',
            processing_time: '2.4s',
            data_sources: ['market_feed_1', 'sentiment_analyzer', 'technical_indicators'],
            confidence: 0.87,
          },
          verified: true,
          signatures: [
            '0x1234567890abcdef1234567890abcdef12345678',
            '0xabcdef1234567890abcdef1234567890abcdef12',
            '0x567890abcdef1234567890abcdef1234567890ab',
          ],
          blockNumber: 12345,
          transactionHash: '0x' + cid.slice(-8).padEnd(64, '0'), // Deterministic hash based on CID
        };

        setReplayData(mockData);
        setLoading(false);
      }, 1500);

    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to fetch replay data');
      setLoading(false);
    }
  };

  const formatTimestamp = (timestamp: number) => {
    return new Date(timestamp).toLocaleString();
  };

  const verifyContent = async () => {
    // Simulate verification process
    alert('Content verification process initiated. This would validate the CID against stored hashes and signatures.');
  };

  if (loading) {
    return (
      <DashboardLayout>
        <div className="text-center py-12">
          <div className="text-lg text-slate-600">Loading replay data for CID: {cid}</div>
          <div className="mt-4">
            <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
          </div>
        </div>
      </DashboardLayout>
    );
  }

  if (error || !replayData) {
    return (
      <DashboardLayout>
        <div className="text-center py-12">
          <div className="text-lg text-red-600">
            {error || 'Failed to load replay data'}
          </div>
          <Button onClick={fetchReplayData} className="mt-4">
            Retry
          </Button>
        </div>
      </DashboardLayout>
    );
  }

  return (
    <DashboardLayout>
      <div className="space-y-6">
        {/* Header */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-slate-900">Content Replay</h1>
            <p className="text-slate-600 mt-2">
              Viewing content for CID: <code className="font-mono text-sm bg-slate-100 px-2 py-1 rounded">{cid}</code>
            </p>
          </div>
          <div className="flex gap-2">
            <Badge variant={replayData.verified ? 'default' : 'destructive'}>
              {replayData.verified ? '✓ Verified' : '✗ Unverified'}
            </Badge>
            <Button onClick={verifyContent} variant="outline">
              Re-verify
            </Button>
          </div>
        </div>

        {/* Metadata Overview */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <Card>
            <CardContent className="p-6">
              <div className="text-sm text-slate-600">Agent ID</div>
              <div className="text-lg font-medium text-slate-900">{replayData.agentId}</div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="p-6">
              <div className="text-sm text-slate-600">Created</div>
              <div className="text-lg font-medium text-slate-900">
                {formatTimestamp(replayData.timestamp)}
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="p-6">
              <div className="text-sm text-slate-600">Signatures</div>
              <div className="text-lg font-medium text-slate-900">{replayData.signatures.length}</div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="p-6">
              <div className="text-sm text-slate-600">Block</div>
              <div className="text-lg font-medium text-slate-900">#{replayData.blockNumber}</div>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Main Content */}
          <div className="lg:col-span-2">
            <Card>
              <CardHeader>
                <CardTitle>Replayed Content</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="prose prose-sm max-w-none">
                  <pre className="whitespace-pre-wrap bg-slate-50 p-4 rounded-lg border text-sm">
                    {replayData.content}
                  </pre>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Side Panel */}
          <div className="space-y-6">
            {/* Technical Metadata */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Technical Metadata</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3 text-sm">
                <div>
                  <div className="font-medium text-slate-700">Model:</div>
                  <div className="text-slate-600">{replayData.metadata.model}</div>
                </div>
                <div>
                  <div className="font-medium text-slate-700">Version:</div>
                  <div className="text-slate-600">{replayData.metadata.version}</div>
                </div>
                <div>
                  <div className="font-medium text-slate-700">Processing Time:</div>
                  <div className="text-slate-600">{replayData.metadata.processing_time}</div>
                </div>
                <div>
                  <div className="font-medium text-slate-700">Confidence:</div>
                  <div className="text-slate-600">{(replayData.metadata.confidence * 100).toFixed(1)}%</div>
                </div>
              </CardContent>
            </Card>

            {/* Data Sources */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Data Sources</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {replayData.metadata.data_sources?.map((source: string, idx: number) => (
                    <Badge key={idx} variant="outline" className="text-xs">
                      {source}
                    </Badge>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Verification Details */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Verification</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3 text-sm">
                <div>
                  <div className="font-medium text-slate-700">Transaction Hash:</div>
                  <div className="font-mono text-xs bg-slate-100 p-2 rounded break-all">
                    {replayData.transactionHash}
                  </div>
                </div>
                <div>
                  <div className="font-medium text-slate-700 mb-2">Signatures:</div>
                  <div className="space-y-1">
                    {replayData.signatures.map((sig, idx) => (
                      <div key={idx} className="font-mono text-xs bg-slate-100 p-1 rounded">
                        {sig.slice(0, 12)}...{sig.slice(-8)}
                      </div>
                    ))}
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* CID Information */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">CID Information</CardTitle>
              </CardHeader>
              <CardContent className="text-sm space-y-2">
                <div>
                  <div className="font-medium text-slate-700">Content ID:</div>
                  <div className="font-mono text-xs bg-slate-100 p-2 rounded break-all">
                    {replayData.cid}
                  </div>
                </div>
                <div className="text-slate-600">
                  This Content ID (CID) is a cryptographic hash that uniquely identifies 
                  this content and enables verification of its authenticity.
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </DashboardLayout>
  );
} 